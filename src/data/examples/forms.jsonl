{"title": "Basic Form with Validation", "description": "Complete form with input validation and error handling", "component": "Form", "code": "<script>\n  import { Button } from '$lib/components/ui/button';\n  import { Input } from '$lib/components/ui/input';\n  import { Label } from '$lib/components/ui/label';\n  import { Textarea } from '$lib/components/ui/textarea';\n  \n  let form = {\n    name: '',\n    email: '',\n    message: ''\n  };\n  \n  let errors = {};\n  let loading = false;\n  \n  function validateForm() {\n    errors = {};\n    \n    if (!form.name.trim()) {\n      errors.name = 'Name is required';\n    }\n    \n    if (!form.email.trim()) {\n      errors.email = 'Email is required';\n    } else if (!/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(form.email)) {\n      errors.email = 'Please enter a valid email';\n    }\n    \n    if (!form.message.trim()) {\n      errors.message = 'Message is required';\n    }\n    \n    return Object.keys(errors).length === 0;\n  }\n  \n  async function handleSubmit() {\n    if (!validateForm()) return;\n    \n    loading = true;\n    // Simulate API call\n    await new Promise(resolve => setTimeout(resolve, 1000));\n    loading = false;\n    \n    // Reset form\n    form = { name: '', email: '', message: '' };\n  }\n</script>\n\n<form on:submit|preventDefault={handleSubmit} class=\"space-y-4\">\n  <div class=\"space-y-2\">\n    <Label for=\"name\">Name</Label>\n    <Input \n      id=\"name\" \n      bind:value={form.name}\n      placeholder=\"Enter your name\"\n      class={errors.name ? 'border-destructive' : ''}\n    />\n    {#if errors.name}\n      <p class=\"text-sm text-destructive\">{errors.name}</p>\n    {/if}\n  </div>\n  \n  <div class=\"space-y-2\">\n    <Label for=\"email\">Email</Label>\n    <Input \n      id=\"email\" \n      type=\"email\"\n      bind:value={form.email}\n      placeholder=\"Enter your email\"\n      class={errors.email ? 'border-destructive' : ''}\n    />\n    {#if errors.email}\n      <p class=\"text-sm text-destructive\">{errors.email}</p>\n    {/if}\n  </div>\n  \n  <div class=\"space-y-2\">\n    <Label for=\"message\">Message</Label>\n    <Textarea \n      id=\"message\" \n      bind:value={form.message}\n      placeholder=\"Enter your message\"\n      class={errors.message ? 'border-destructive' : ''}\n    />\n    {#if errors.message}\n      <p class=\"text-sm text-destructive\">{errors.message}</p>\n    {/if}\n  </div>\n  \n  <Button type=\"submit\" disabled={loading}>\n    {loading ? 'Submitting...' : 'Submit'}\n  </Button>\n</form>", "category": "forms", "tags": ["form", "validation", "input", "textarea", "label"], "complexity": "intermediate", "dependencies": ["@/components/ui/button", "@/components/ui/input", "@/components/ui/label", "@/components/ui/textarea"]}
{"title": "Form with Select and Checkbox", "description": "Advanced form with select dropdown and checkbox components", "component": "Form", "code": "<script>\n  import { Button } from '$lib/components/ui/button';\n  import { Input } from '$lib/components/ui/input';\n  import { Label } from '$lib/components/ui/label';\n  import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '$lib/components/ui/select';\n  import { Checkbox } from '$lib/components/ui/checkbox';\n  \n  let form = {\n    name: '',\n    country: '',\n    newsletter: false,\n    terms: false\n  };\n  \n  const countries = [\n    { value: 'us', label: 'United States' },\n    { value: 'ca', label: 'Canada' },\n    { value: 'uk', label: 'United Kingdom' },\n    { value: 'au', label: 'Australia' }\n  ];\n  \n  function handleSubmit() {\n    console.log('Form submitted:', form);\n  }\n</script>\n\n<form on:submit|preventDefault={handleSubmit} class=\"space-y-6\">\n  <div class=\"space-y-2\">\n    <Label for=\"name\">Full Name</Label>\n    <Input \n      id=\"name\" \n      bind:value={form.name}\n      placeholder=\"Enter your full name\"\n    />\n  </div>\n  \n  <div class=\"space-y-2\">\n    <Label for=\"country\">Country</Label>\n    <Select bind:value={form.country}>\n      <SelectTrigger>\n        <SelectValue placeholder=\"Select a country\" />\n      </SelectTrigger>\n      <SelectContent>\n        {#each countries as country}\n          <SelectItem value={country.value}>{country.label}</SelectItem>\n        {/each}\n      </SelectContent>\n    </Select>\n  </div>\n  \n  <div class=\"space-y-4\">\n    <div class=\"flex items-center space-x-2\">\n      <Checkbox id=\"newsletter\" bind:checked={form.newsletter} />\n      <Label for=\"newsletter\">Subscribe to newsletter</Label>\n    </div>\n    \n    <div class=\"flex items-center space-x-2\">\n      <Checkbox id=\"terms\" bind:checked={form.terms} required />\n      <Label for=\"terms\">I agree to the terms and conditions</Label>\n    </div>\n  </div>\n  \n  <Button type=\"submit\" disabled={!form.terms}>\n    Create Account\n  </Button>\n</form>", "category": "forms", "tags": ["form", "select", "checkbox", "dropdown", "validation"], "complexity": "advanced", "dependencies": ["@/components/ui/button", "@/components/ui/input", "@/components/ui/label", "@/components/ui/select", "@/components/ui/checkbox"]}
{"title": "User Profile Card with Avatar", "description": "Complete user profile card with avatar, stats, and action buttons", "component": "Card", "code": "<script>\n  import { Card, Button, Badge } from '$lib/components/ui';\n  import { User, Mail, MapPin, Calendar } from 'lucide-svelte';\n  \n  const user = {\n    name: 'Sarah Johnson',\n    email: 'sarah.johnson@example.com',\n    location: 'San Francisco, CA',\n    joinDate: 'March 2023',\n    role: 'Senior Developer',\n    status: 'active',\n    projects: 24,\n    tasks: 156\n  };\n  \n  function handleMessageUser() {\n    console.log('Message user:', user.name);\n  }\n  \n  function viewProfile() {\n    console.log('View profile:', user.name);\n  }\n</script>\n\n<Card class=\"w-full max-w-md\">\n  <Card.Header class=\"text-center\">\n    <div class=\"mx-auto mb-4\">\n      <div class=\"w-20 h-20 rounded-full bg-gradient-to-r from-blue-500 to-purple-600 flex items-center justify-center text-white text-2xl font-bold\">\n        SJ\n      </div>\n    </div>\n    <Card.Title class=\"text-xl\">{user.name}</Card.Title>\n    <Card.Description class=\"flex items-center justify-center gap-1\">\n      <Badge variant=\"secondary\">{user.role}</Badge>\n      <Badge variant={user.status === 'active' ? 'default' : 'destructive'}>\n        {user.status}\n      </Badge>\n    </Card.Description>\n  </Card.Header>\n  \n  <Card.Content class=\"space-y-4\">\n    <div class=\"space-y-3\">\n      <div class=\"flex items-center gap-2 text-sm text-muted-foreground\">\n        <Mail class=\"h-4 w-4\" />\n        <span>{user.email}</span>\n      </div>\n      <div class=\"flex items-center gap-2 text-sm text-muted-foreground\">\n        <MapPin class=\"h-4 w-4\" />\n        <span>{user.location}</span>\n      </div>\n      <div class=\"flex items-center gap-2 text-sm text-muted-foreground\">\n        <Calendar class=\"h-4 w-4\" />\n        <span>Joined {user.joinDate}</span>\n      </div>\n    </div>\n    \n    <div class=\"grid grid-cols-2 gap-4 pt-4 border-t\">\n      <div class=\"text-center\">\n        <div class=\"text-2xl font-bold\">{user.projects}</div>\n        <div class=\"text-sm text-muted-foreground\">Projects</div>\n      </div>\n      <div class=\"text-center\">\n        <div class=\"text-2xl font-bold\">{user.tasks}</div>\n        <div class=\"text-sm text-muted-foreground\">Tasks</div>\n      </div>\n    </div>\n  </Card.Content>\n  \n  <Card.Footer class=\"flex gap-2\">\n    <Button variant=\"outline\" class=\"flex-1\" on:click={handleMessageUser}>\n      Message\n    </Button>\n    <Button class=\"flex-1\" on:click={viewProfile}>\n      View Profile\n    </Button>\n  </Card.Footer>\n</Card>", "category": "cards", "tags": ["card", "profile", "avatar", "badge", "layout"], "complexity": "intermediate", "dependencies": ["@/components/ui/card", "@/components/ui/button", "@/components/ui/badge", "lucide-svelte"]}
{"title": "Data Table with Sorting and Actions", "description": "Responsive data table with sorting functionality and action buttons", "component": "Table", "code": "<script>\n  import { Table, Button, Badge } from '$lib/components/ui';\n  import { ArrowUpDown, MoreHorizontal, Edit, Trash2, Eye } from 'lucide-svelte';\n  \n  let users = [\n    { id: 1, name: 'John Doe', email: 'john@example.com', role: 'Admin', status: 'active', lastLogin: '2024-01-15' },\n    { id: 2, name: 'Jane Smith', email: 'jane@example.com', role: 'User', status: 'active', lastLogin: '2024-01-14' },\n    { id: 3, name: 'Bob Johnson', email: 'bob@example.com', role: 'User', status: 'inactive', lastLogin: '2024-01-10' },\n    { id: 4, name: 'Alice Brown', email: 'alice@example.com', role: 'Moderator', status: 'active', lastLogin: '2024-01-13' },\n  ];\n  \n  let sortField = 'name';\n  let sortDirection = 'asc';\n  \n  function sortUsers(field) {\n    if (sortField === field) {\n      sortDirection = sortDirection === 'asc' ? 'desc' : 'asc';\n    } else {\n      sortField = field;\n      sortDirection = 'asc';\n    }\n    \n    users.sort((a, b) => {\n      const aVal = a[field].toLowerCase();\n      const bVal = b[field].toLowerCase();\n      return sortDirection === 'asc' ? aVal.localeCompare(bVal) : bVal.localeCompare(aVal);\n    });\n  }\n  \n  function getSortIcon(field) {\n    if (sortField !== field) return <ArrowUpDown class=\"h-4 w-4\" />;\n    return sortDirection === 'asc' ? '↑' : '↓';\n  }\n  \n  function editUser(user) {\n    console.log('Edit user:', user);\n  }\n  \n  function deleteUser(user) {\n    console.log('Delete user:', user);\n  }\n  \n  function viewUser(user) {\n    console.log('View user:', user);\n  }\n</script>\n\n<div class=\"rounded-md border\">\n  <Table.Root>\n    <Table.Header>\n      <Table.Row>\n        <Table.Head class=\"w-[100px]\">ID</Table.Head>\n        <Table.Head class=\"cursor-pointer\" on:click={() => sortUsers('name')}>\n          <div class=\"flex items-center gap-1\">\n            Name {getSortIcon('name')}\n          </div>\n        </Table.Head>\n        <Table.Head>Email</Table.Head>\n        <Table.Head class=\"cursor-pointer\" on:click={() => sortUsers('role')}>\n          <div class=\"flex items-center gap-1\">\n            Role {getSortIcon('role')}\n          </div>\n        </Table.Head>\n        <Table.Head>Status</Table.Head>\n        <Table.Head>Last Login</Table.Head>\n        <Table.Head class=\"text-right\">Actions</Table.Head>\n      </Table.Row>\n    </Table.Header>\n    <Table.Body>\n      {#each users as user}\n        <Table.Row>\n          <Table.Cell class=\"font-medium\">{user.id}</Table.Cell>\n          <Table.Cell>{user.name}</Table.Cell>\n          <Table.Cell>{user.email}</Table.Cell>\n          <Table.Cell>\n            <Badge variant={user.role === 'Admin' ? 'destructive' : 'secondary'}>\n              {user.role}\n            </Badge>\n          </Table.Cell>\n          <Table.Cell>\n            <Badge variant={user.status === 'active' ? 'default' : 'outline'}>\n              {user.status}\n            </Badge>\n          </Table.Cell>\n          <Table.Cell>{user.lastLogin}</Table.Cell>\n          <Table.Cell class=\"text-right\">\n            <div class=\"flex justify-end gap-2\">\n              <Button variant=\"ghost\" size=\"icon\" on:click={() => viewUser(user)}>\n                <Eye class=\"h-4 w-4\" />\n              </Button>\n              <Button variant=\"ghost\" size=\"icon\" on:click={() => editUser(user)}>\n                <Edit class=\"h-4 w-4\" />\n              </Button>\n              <Button variant=\"ghost\" size=\"icon\" on:click={() => deleteUser(user)}>\n                <Trash2 class=\"h-4 w-4\" />\n              </Button>\n            </div>\n          </Table.Cell>\n        </Table.Row>\n      {/each}\n    </Table.Body>\n  </Table.Root>\n</div>", "category": "tables", "tags": ["table", "sorting", "actions", "data", "responsive"], "complexity": "advanced", "dependencies": ["@/components/ui/table", "@/components/ui/button", "@/components/ui/badge", "lucide-svelte"]}
{"title": "Settings Form with Tabs", "description": "Multi-tab settings form with different configuration sections", "component": "Tabs", "code": "<script>\n  import { Tabs, Button, Input, Label, Switch, Card } from '$lib/components/ui';\n  import { User, Bell, Shield, Database } from 'lucide-svelte';\n  \n  let activeTab = 'profile';\n  \n  let profileForm = {\n    name: 'John Doe',\n    email: 'john@example.com',\n    bio: '',\n    location: ''\n  };\n  \n  let notificationSettings = {\n    email: true,\n    push: false,\n    sms: true,\n    desktop: true\n  };\n  \n  let privacySettings = {\n    profileVisible: true,\n    showEmail: false,\n    allowMessages: true,\n    dataCollection: false\n  };\n  \n  function saveSettings() {\n    console.log('Saving settings...');\n    // Save logic here\n  }\n</script>\n\n<Card class=\"w-full max-w-4xl\">\n  <Card.Header>\n    <Card.Title>Settings</Card.Title>\n    <Card.Description>Manage your account settings and preferences</Card.Description>\n  </Card.Header>\n  \n  <Card.Content>\n    <Tabs.Root bind:value={activeTab} class=\"w-full\">\n      <Tabs.List class=\"grid w-full grid-cols-4\">\n        <Tabs.Trigger value=\"profile\" class=\"flex items-center gap-2\">\n          <User class=\"h-4 w-4\" />\n          Profile\n        </Tabs.Trigger>\n        <Tabs.Trigger value=\"notifications\" class=\"flex items-center gap-2\">\n          <Bell class=\"h-4 w-4\" />\n          Notifications\n        </Tabs.Trigger>\n        <Tabs.Trigger value=\"privacy\" class=\"flex items-center gap-2\">\n          <Shield class=\"h-4 w-4\" />\n          Privacy\n        </Tabs.Trigger>\n        <Tabs.Trigger value=\"data\" class=\"flex items-center gap-2\">\n          <Database class=\"h-4 w-4\" />\n          Data\n        </Tabs.Trigger>\n      </Tabs.List>\n      \n      <Tabs.Content value=\"profile\" class=\"space-y-6\">\n        <div class=\"space-y-4\">\n          <div class=\"grid grid-cols-2 gap-4\">\n            <div class=\"space-y-2\">\n              <Label for=\"name\">Full Name</Label>\n              <Input id=\"name\" bind:value={profileForm.name} placeholder=\"John Doe\" />\n            </div>\n            <div class=\"space-y-2\">\n              <Label for=\"email\">Email</Label>\n              <Input id=\"email\" type=\"email\" bind:value={profileForm.email} placeholder=\"john@example.com\" />\n            </div>\n          </div>\n          <div class=\"space-y-2\">\n            <Label for=\"bio\">Bio</Label>\n            <textarea \n              id=\"bio\" \n              bind:value={profileForm.bio}\n              class=\"w-full min-h-[100px] px-3 py-2 border border-input bg-background rounded-md\"\n              placeholder=\"Tell us about yourself...\"\n            />\n          </div>\n          <div class=\"space-y-2\">\n            <Label for=\"location\">Location</Label>\n            <Input id=\"location\" bind:value={profileForm.location} placeholder=\"San Francisco, CA\" />\n          </div>\n        </div>\n      </Tabs.Content>\n      \n      <Tabs.Content value=\"notifications\" class=\"space-y-6\">\n        <div class=\"space-y-4\">\n          <h3 class=\"text-lg font-medium\">Notification Preferences</h3>\n          <div class=\"space-y-4\">\n            <div class=\"flex items-center justify-between\">\n              <div class=\"space-y-0.5\">\n                <Label for=\"email-notifications\">Email Notifications</Label>\n                <p class=\"text-sm text-muted-foreground\">Receive notifications via email</p>\n              </div>\n              <Switch id=\"email-notifications\" bind:checked={notificationSettings.email} />\n            </div>\n            <div class=\"flex items-center justify-between\">\n              <div class=\"space-y-0.5\">\n                <Label for=\"push-notifications\">Push Notifications</Label>\n                <p class=\"text-sm text-muted-foreground\">Receive push notifications in browser</p>\n              </div>\n              <Switch id=\"push-notifications\" bind:checked={notificationSettings.push} />\n            </div>\n            <div class=\"flex items-center justify-between\">\n              <div class=\"space-y-0.5\">\n                <Label for=\"sms-notifications\">SMS Notifications</Label>\n                <p class=\"text-sm text-muted-foreground\">Receive text message notifications</p>\n              </div>\n              <Switch id=\"sms-notifications\" bind:checked={notificationSettings.sms} />\n            </div>\n            <div class=\"flex items-center justify-between\">\n              <div class=\"space-y-0.5\">\n                <Label for=\"desktop-notifications\">Desktop Notifications</Label>\n                <p class=\"text-sm text-muted-foreground\">Show desktop notifications</p>\n              </div>\n              <Switch id=\"desktop-notifications\" bind:checked={notificationSettings.desktop} />\n            </div>\n          </div>\n        </div>\n      </Tabs.Content>\n      \n      <Tabs.Content value=\"privacy\" class=\"space-y-6\">\n        <div class=\"space-y-4\">\n          <h3 class=\"text-lg font-medium\">Privacy Settings</h3>\n          <div class=\"space-y-4\">\n            <div class=\"flex items-center justify-between\">\n              <div class=\"space-y-0.5\">\n                <Label for=\"profile-visible\">Profile Visible</Label>\n                <p class=\"text-sm text-muted-foreground\">Make your profile visible to other users</p>\n              </div>\n              <Switch id=\"profile-visible\" bind:checked={privacySettings.profileVisible} />\n            </div>\n            <div class=\"flex items-center justify-between\">\n              <div class=\"space-y-0.5\">\n                <Label for=\"show-email\">Show Email</Label>\n                <p class=\"text-sm text-muted-foreground\">Display your email address on your profile</p>\n              </div>\n              <Switch id=\"show-email\" bind:checked={privacySettings.showEmail} />\n            </div>\n            <div class=\"flex items-center justify-between\">\n              <div class=\"space-y-0.5\">\n                <Label for=\"allow-messages\">Allow Messages</Label>\n                <p class=\"text-sm text-muted-foreground\">Allow other users to send you messages</p>\n              </div>\n              <Switch id=\"allow-messages\" bind:checked={privacySettings.allowMessages} />\n            </div>\n            <div class=\"flex items-center justify-between\">\n              <div class=\"space-y-0.5\">\n                <Label for=\"data-collection\">Data Collection</Label>\n                <p class=\"text-sm text-muted-foreground\">Allow collection of usage data</p>\n              </div>\n              <Switch id=\"data-collection\" bind:checked={privacySettings.dataCollection} />\n            </div>\n          </div>\n        </div>\n      </Tabs.Content>\n      \n      <Tabs.Content value=\"data\" class=\"space-y-6\">\n        <div class=\"space-y-4\">\n          <h3 class=\"text-lg font-medium\">Data Management</h3>\n          <div class=\"space-y-4\">\n            <Card>\n              <Card.Header>\n                <Card.Title class=\"text-base\">Export Data</Card.Title>\n                <Card.Description>Download all your data in JSON format</Card.Description>\n              </Card.Header>\n              <Card.Footer>\n                <Button variant=\"outline\">Export Data</Button>\n              </Card.Footer>\n            </Card>\n            <Card>\n              <Card.Header>\n                <Card.Title class=\"text-base\">Delete Account</Card.Title>\n                <Card.Description>Permanently delete your account and all data</Card.Description>\n              </Card.Header>\n              <Card.Footer>\n                <Button variant=\"destructive\">Delete Account</Button>\n              </Card.Footer>\n            </Card>\n          </div>\n        </div>\n      </Tabs.Content>\n    </Tabs.Root>\n  </Card.Content>\n  \n  <Card.Footer class=\"flex justify-end gap-2\">\n    <Button variant=\"outline\">Cancel</Button>\n    <Button on:click={saveSettings}>Save Changes</Button>\n  </Card.Footer>\n</Card>", "category": "forms", "tags": ["tabs", "settings", "form", "switch", "input"], "complexity": "advanced", "dependencies": ["@/components/ui/tabs", "@/components/ui/button", "@/components/ui/input", "@/components/ui/label", "@/components/ui/switch", "@/components/ui/card", "lucide-svelte"]}