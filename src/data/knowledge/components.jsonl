{"question": "What components are available in shadcn-svelte?", "answer": "shadcn-svelte includes a comprehensive set of components:\n\nLayout: Accordion, Alert Dialog, Aspect Ratio, Avatar, Badge, Breadcrumb, Card, Carousel, Collapsible, Dialog, Drawer, Dropdown Menu, Hover Card, Navigation Menu, Pagination, Popover, Progress, Resizable, Scroll Area, Separator, Sheet, Skeleton, Table, Tabs, Toast, Tooltip\n\nForm: Button, Calendar, Checkbox, Command, Combobox, Date Picker, Form, Input, Label, Radio Group, Range Calendar, Select, Slider, Switch, Textarea, Toggle, Toggle Group\n\nData Display: Alert, Avatar, Badge, Card, Data Table, Progress, Skeleton, Table\n\nFeedback: Alert, Dialog, Drawer, Hover Card, Popover, Toast, Tooltip", "category": "components", "tags": ["catalog", "available-components", "ui-elements"]}
{"question": "How do I add a specific component like Button to my project?", "answer": "To add the Button component:\n1. Run `npx shadcn-svelte@latest add button`\n2. The component will be installed to `src/lib/components/ui/button/`\n3. Import it in your Svelte files: `import { Button } from '$lib/components/ui/button'`\n4. Use it: `<Button variant=\"outline\">Click me</Button>`\n\nThe CLI automatically handles:\n- Installing necessary dependencies\n- Creating component files\n- Setting up proper TypeScript types\n- Configuring variants and styling", "category": "components", "tags": ["installation", "button", "usage", "cli"]}
{"question": "What are component variants and how do I use them?", "answer": "Component variants are different visual styles and behaviors for the same component, implemented using class-variance-authority (cva):\n\nExample Button variants:\n- `variant`: 'default', 'destructive', 'outline', 'secondary', 'ghost', 'link'\n- `size`: 'default', 'sm', 'lg', 'icon'\n\nUsage:\n```svelte\n<Button variant=\"outline\" size=\"lg\">Large Outline Button</Button>\n<Button variant=\"destructive\">Delete</Button>\n<Button variant=\"ghost\" size=\"icon\"><Icon /></Button>\n```\n\nVariants provide:\n- Consistent design system\n- Type safety\n- Easy customization\n- Accessible styling", "category": "components", "tags": ["variants", "styling", "cva", "design-system"]}
{"question": "How do I customize shadcn-svelte component styles?", "answer": "You can customize shadcn-svelte components in several ways:\n\n1. **CSS Variables**: Modify theme colors in your global CSS\n2. **Tailwind Classes**: Add additional classes via `class` prop\n3. **Component Variants**: Extend existing variants in the component file\n4. **Direct Modification**: Edit component files since you own the code\n5. **Custom Props**: Add your own props to component interfaces\n\nExample customization:\n```svelte\n<!-- Additional classes -->\n<Button class=\"rounded-full shadow-lg\">Custom Button</Button>\n\n<!-- CSS variables (in global CSS) -->\n:root {\n  --primary: 210 40% 98%;\n  --primary-foreground: 222.2 84% 4.9%;\n}\n```", "category": "components", "tags": ["customization", "styling", "theming", "css-variables"]}